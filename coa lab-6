1 (a) Write a program in assembly language to print single character on screen. 
Code: 
ORG 100h          ; Origin, to specify that the program starts at 100h (COM file format) 
; Print "Enter the input: " 
MOV AH, 09h       ; DOS funcIon 09h: print string 
MOV DX, OFFSET msg_enter_input ; Load address of the string 
INT 21h           ; Call DOS interrupt to print the string 
; Read a single character from user 
MOV AH, 01h       ; DOS funcIon 01h: read single character 
INT 21h           ; Call DOS interrupt to get the character 
MOV BL, AL        ; Store the input character in BL register 
; Print "The entered input is: " 
MOV AH, 09h       ; DOS funcIon 09h: print string 
MOV DX, OFFSET msg_entered_input ; Load address of the second string 
INT 21h           ; Call DOS interrupt to print the string 
; Print the character stored in BL register 
MOV DL, BL        ; Move character from BL to DL for prinIng 
MOV AH, 02h       ; DOS funcIon 02h: print single character 
INT 21h           ; Call DOS interrupt to print the character 
; Terminate the program 
MOV AH, 4Ch       ; DOS funcIon 4Ch: terminate program 
INT 21h           ; Call DOS interrupt to exit 
; Data secIon 
msg_enter_input DB 'Enter the input: $'          ; Prompt message 
msg_entered_input DB 0Dh, 0Ah, 'Your input is: $' ; Newline and display message END         ; End of program 
 
 
 
(b) Write an assembly language program to convert an upper-case le:er to the corresponding lower-case le:er. 
Code: 
ORG 100h           ; Origin, to specify that the program starts at 100h (COM file format) 
; Display message "Enter an uppercase le[er: " 
MOV DX, OFFSET msg_input  ; Load the address of the message 
MOV AH, 09h        ; FuncIon 09h of INT 21h is used to display a string 
INT 21h            ; Call DOS interrupt to print the message 
; Read a single character from the user 
MOV AH, 01h        ; FuncIon 01h of INT 21h is used to read a character 
INT 21h            ; Call DOS interrupt to get the character 
MOV DL, AL         ; Store the input character in AL 
; Check if the character is an uppercase le[er (A-Z) 
CMP AL, 'A'        ; Compare AL with 'A' 
JL NotUpperCase    ; If the input is less than 'A', it is not uppercase 
CMP AL, 'Z'        ; Compare AL with 'Z' 
JG NotUpperCase    ; If the input is greater than 'Z', it is not uppercase 
; Convert the uppercase le[er to lowercase 
ADD AL, 20h        ; Add 32 (20h) to convert uppercase to lowercase   
MOV BL, AL 
; Print the message "The lowercase le[er is: " 
MOV DX, OFFSET msg_output  ; Load the address of the output message 
MOV AH, 09h        ; FuncIon 09h of INT 21h is used to display a string 
INT 21h            ; Call DOS interrupt to print the output message    
MOV AL, BL 
; Print the converted lowercase le[er 
MOV DL, AL         ; Move the lowercase le[er to DL 
MOV AH, 02h        ; FuncIon 02h of INT 21h is used to print a single character 
INT 21h            ; Call DOS interrupt to print the character 
JMP EndProgram     ; Jump to the end of the program NotUpperCase: 
; If the input is not an uppercase le[er, display an error message 
MOV DX, OFFSET msg_error  ; Load the address of the error message 
MOV AH, 09h        ; FuncIon 09h of INT 21h is used to display a string 
INT 21h            ; Call DOS interrupt to print the error message EndProgram: 
; Terminate the program 
MOV AH, 4Ch        ; FuncIon 4Ch of INT 21h terminates the program INT 21h            ; Call DOS interrupt to exit msg_input  DB 'Enter an uppercase le[er: $' msg_output DB 0Dh, 0Ah, 'The lowercase le[er is: $'  ; Output message msg_error  DB 0Dh, 0Ah, 'Error: Not an uppercase le[er! $'  ; Error message END                ; End of program 

  
 
 
 
Prac>ce set: 
2. (a) Write a program in assembly language to print mul>ple characters on screen. 
Code: 
ORG 100h          ; Origin, to specify that the program starts at 100h (COM file format) 
; Print "Enter the input: " 
MOV AH, 09h       ; DOS funcIon 09h: print string 
MOV DX, OFFSET msg_enter_input ; Load address of the string 
INT 21h           ; Call DOS interrupt to print the string 
; Read mulIple characters from user 
MOV AH, 0Ah       ; DOS funcIon 0Ah: buffered input 
MOV DX, OFFSET input_buffer  ; Load address of the input buffer 
INT 21h           ; Call DOS interrupt to read the string 
; Add a $ at the end of the entered string for prinIng 
MOV AL, '$'            ; Store $ in AL 
LEA DI, input_buffer+2 ; DI points to the actual input string 
MOV CL, [input_buffer+1] ; Get the count of characters entered 
ADD DI, CX             ; Move DI to the end of the entered string 
MOV [DI], AL           ; Insert $ at the end of the string 
; Print "The entered input is: " 
MOV AH, 09h       ; DOS funcIon 09h: print string 
MOV DX, OFFSET msg_entered_input ; Load address of the second string 
INT 21h           ; Call DOS interrupt to print the string 
; Print the entered string 
LEA DX, input_buffer+2  ; Load address of the actual input (skip buffer size and count) 
MOV AH, 09h             ; DOS funcIon 09h: print string 
INT 21h                 ; Call DOS interrupt to print the input string 
; Terminate the program 
MOV AH, 4Ch       ; DOS funcIon 4Ch: terminate program 
INT 21h           ; Call DOS interrupt to exit 
; Data secIon 
msg_enter_input DB 'Enter the input: $'          ; Prompt message msg_entered_input DB 0Dh, 0Ah, 'The entered input is: $' ; Newline and display message input_buffer DB 10, 0   ; Buffer to store input: 10 max chars, iniIal count 0 
                       ; The actual characters will be stored starIng here 
                       ; Followed by a terminator (CR) 
END         ; End of program 
   
  
 
(b) Write an assembly language program to convert a lower-case le:er to the corresponding upper-case le:er. 
Code: 
ORG 100h           ; Origin, to specify that the program starts at 100h (COM file format) 
; Display message "Enter a lowercase le[er: " 
MOV DX, OFFSET msg_input  ; Load the address of the message 
MOV AH, 09h        ; FuncIon 09h of INT 21h is used to display a string 
INT 21h            ; Call DOS interrupt to print the message 
; Read a single character from the user 
MOV AH, 01h        ; FuncIon 01h of INT 21h is used to read a character 
INT 21h            ; Call DOS interrupt to get the character 
MOV DL, AL         ; Store the input character in AL 
; Check if the character is a lowercase le[er (a-z) 
CMP AL, 'a'        ; Compare AL with 'a' 
JL NotLowerCase    ; If the input is less than 'a', it is not lowercase 
CMP AL, 'z'        ; Compare AL with 'z' 
JG NotLowerCase    ; If the input is greater than 'z', it is not lowercase 
; Convert the lowercase le[er to uppercase 
SUB AL, 20h        ; Subtract 32 (20h) to convert lowercase to uppercase 
MOV BL,AL 
; Print the message "The uppercase le[er is: " 
MOV DX, OFFSET msg_output  ; Load the address of the output message 
MOV AH, 09h        ; FuncIon 09h of INT 21h is used to display a string 
INT 21h            ; Call DOS interrupt to print the output message 
MOV AL, BL 
; Print the converted uppercase le[er 
MOV DL, AL         ; Move the uppercase le[er to DL 
MOV AH, 02h        ; FuncIon 02h of INT 21h is used to print a single character 
INT 21h            ; Call DOS interrupt to print the character 
JMP EndProgram     ; Jump to the end of the program NotLowerCase: 
; If the input is not a lowercase le[er, display an error message 
MOV DX, OFFSET msg_error  ; Load the address of the error message 
MOV AH, 09h        ; FuncIon 09h of INT 21h is used to display a string 
INT 21h            ; Call DOS interrupt to print the error message EndProgram: 
; Terminate the program 
MOV AH, 4Ch        ; FuncIon 4Ch of INT 21h terminates the program INT 21h            ; Call DOS interrupt to exit msg_input  DB 'Enter a lowercase le[er: $' msg_output DB 0Dh, 0Ah, 'The uppercase le[er is: $'  ; Output message msg_error  DB 0Dh, 0Ah, 'Error: Not a lowercase le[er! $'  ; Error message 
END                ; End of program 
